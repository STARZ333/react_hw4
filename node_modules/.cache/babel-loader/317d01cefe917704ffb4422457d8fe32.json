{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\77393\\\\Desktop\\\\quiz5\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserGithub from './github_user';\nimport reportWebVitals from './reportWebVitals';\nimport SidebarExample from './cgurouter';\nimport BasicExample from './BasicExample';\nimport TodoApp from './todoList';\nimport App from './App';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar todoItems = []; // ReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this), document.getElementById('root'));\nreportWebVitals();\n/*\n// Todo app structure\n\n// TodoApp\n//   - ToDoTitle\n//   - TodoList\n//     - TodoListItem #1\n//     - TodoListItem #2\n//       ...\n//     - TodoListItem #N\n//   - ToDoAddForm\n// */\n// /*\n// Todo app structure\n// TodoApp\n// \t- TodoHeader\n// \t- TodoList\n//     - TodoListItem #1\n// \t\t- TodoListItem #2\n// \t\t  ...\n// \t\t- TodoListItem #N\n// \t- TodoForm\n// */\n// var todoItems = [];\n// todoItems.push({index: 1, value: \"learn react\", done: false});\n// todoItems.push({index: 2, value: \"Go shopping\", done: true});\n// todoItems.push({index: 3, value: \"buy flowers\", done: true});\n// class TodoList extends React.Component {\n//   render () {\n//     var items = this.props.items.map((item, index) => {\n//       return (\n//         <TodoListItem key={index} item={item} index={index} removeItem={this.props.removeItem} markTodoDone={this.props.markTodoDone} />\n//       );\n//     });\n//     return (\n//       <ul className=\"list-group\"> {items} </ul>\n//     );\n//   }\n// }\n// class TodoListItem extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.onClickClose = this.onClickClose.bind(this);\n//     this.onClickDone = this.onClickDone.bind(this);\n//   }\n//   onClickClose() {\n//     var index = parseInt(this.props.index);\n//     this.props.removeItem(index);\n//   }\n//   onClickDone() {\n//     var index = parseInt(this.props.index);\n//     this.props.markTodoDone(index);\n//   }\n//   render () {\n//     var todoClass = this.props.item.done ? \n//         \"done\" : \"undone\";\n//     return(\n//       <li className=\"list-group-item \">\n//         <div className={todoClass}>\n//           <span className=\"glyphicon glyphicon-ok icon\" aria-hidden=\"true\" onClick={this.onClickDone}></span>\n//           {this.props.item.value}\n//           <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\n//         </div>\n//       </li>     \n//     );\n//   }\n// }\n// class TodoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentDidMount() {\n//     this.refs.itemName.focus();\n//   }\n//   onSubmit(event) {\n//     event.preventDefault();\n//     var newItemValue = this.refs.itemName.value;\n//     if(newItemValue) {\n//       this.props.addItem({newItemValue});\n//       this.refs.form.reset();\n//     }\n//   }\n//   render () {\n//     return (\n//       <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\n//         <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new todo...\"/>\n//         <button type=\"submit\" className=\"btn btn-default\">Add</button> \n//       </form>\n//     );   \n//   }\n// }\n// class TodoHeader extends React.Component {\n//   render () {\n//     return <h1>Todo list</h1>;\n//   }\n// }\n// class TodoApp extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.addItem = this.addItem.bind(this);\n//     this.removeItem = this.removeItem.bind(this);\n//     this.markTodoDone = this.markTodoDone.bind(this);\n//     this.state = {todoItems: todoItems};\n//   }\n//   addItem(todoItem) {\n//     todoItems.unshift({\n//       index: todoItems.length+1, \n//       value: todoItem.newItemValue, \n//       done: false\n//     });\n//     this.setState({todoItems: todoItems});\n//   }\n//   removeItem (itemIndex) {\n//     todoItems.splice(itemIndex, 1);\n//     this.setState({todoItems: todoItems});\n//   }\n//   markTodoDone(itemIndex) {\n//     var todo = todoItems[itemIndex];\n//     todoItems.splice(itemIndex, 1);\n//     todo.done = !todo.done;\n//     todo.done ? todoItems.push(todo) : todoItems.unshift(todo);\n//     this.setState({todoItems: todoItems});  \n//   }\n//   render() {\n//     return (\n//       <div id=\"main\">\n//         <TodoHeader />\n//         <TodoList items={this.props.initItems} removeItem={this.removeItem} markTodoDone={this.markTodoDone}/>\n//         <TodoForm addItem={this.addItem} />\n//       </div>\n//     );\n//   }\n// }\n// ReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/77393/Desktop/quiz5/src/index.js"],"names":["React","ReactDOM","UserGithub","reportWebVitals","SidebarExample","BasicExample","TodoApp","App","todoItems","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,cAAP,MAA2B,aAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,IAAIC,SAAS,GAAG,EAAhB,C,CAEA;;AACAP,QAAQ,CAACQ,MAAT,eACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QADF,EAEGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFH;AAIAR,eAAe;AACfsourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport UserGithub from './github_user'\nimport reportWebVitals from './reportWebVitals';\nimport SidebarExample from './cgurouter';\nimport BasicExample from './BasicExample';\nimport TodoApp from './todoList';\nimport App from './App';\n\nvar todoItems = [];\n\n// ReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));\nReactDOM.render( \n  <App/>,\n   document.getElementById('root')\n);\nreportWebVitals();\n/*\n// Todo app structure\n\n// TodoApp\n//   - ToDoTitle\n//   - TodoList\n//     - TodoListItem #1\n//     - TodoListItem #2\n//       ...\n//     - TodoListItem #N\n//   - ToDoAddForm\n// */\n// /*\n// Todo app structure\n\n// TodoApp\n// \t- TodoHeader\n// \t- TodoList\n//     - TodoListItem #1\n// \t\t- TodoListItem #2\n// \t\t  ...\n// \t\t- TodoListItem #N\n// \t- TodoForm\n// */\n// var todoItems = [];\n// todoItems.push({index: 1, value: \"learn react\", done: false});\n// todoItems.push({index: 2, value: \"Go shopping\", done: true});\n// todoItems.push({index: 3, value: \"buy flowers\", done: true});\n\n// class TodoList extends React.Component {\n//   render () {\n//     var items = this.props.items.map((item, index) => {\n//       return (\n//         <TodoListItem key={index} item={item} index={index} removeItem={this.props.removeItem} markTodoDone={this.props.markTodoDone} />\n//       );\n//     });\n//     return (\n//       <ul className=\"list-group\"> {items} </ul>\n//     );\n//   }\n// }\n  \n// class TodoListItem extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.onClickClose = this.onClickClose.bind(this);\n//     this.onClickDone = this.onClickDone.bind(this);\n//   }\n//   onClickClose() {\n//     var index = parseInt(this.props.index);\n//     this.props.removeItem(index);\n//   }\n//   onClickDone() {\n//     var index = parseInt(this.props.index);\n//     this.props.markTodoDone(index);\n//   }\n//   render () {\n//     var todoClass = this.props.item.done ? \n//         \"done\" : \"undone\";\n//     return(\n//       <li className=\"list-group-item \">\n//         <div className={todoClass}>\n//           <span className=\"glyphicon glyphicon-ok icon\" aria-hidden=\"true\" onClick={this.onClickDone}></span>\n//           {this.props.item.value}\n//           <button type=\"button\" className=\"close\" onClick={this.onClickClose}>&times;</button>\n//         </div>\n//       </li>     \n//     );\n//   }\n// }\n\n// class TodoForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.onSubmit = this.onSubmit.bind(this);\n//   }\n//   componentDidMount() {\n//     this.refs.itemName.focus();\n//   }\n//   onSubmit(event) {\n//     event.preventDefault();\n//     var newItemValue = this.refs.itemName.value;\n    \n//     if(newItemValue) {\n//       this.props.addItem({newItemValue});\n//       this.refs.form.reset();\n//     }\n//   }\n//   render () {\n//     return (\n//       <form ref=\"form\" onSubmit={this.onSubmit} className=\"form-inline\">\n//         <input type=\"text\" ref=\"itemName\" className=\"form-control\" placeholder=\"add a new todo...\"/>\n//         <button type=\"submit\" className=\"btn btn-default\">Add</button> \n//       </form>\n//     );   \n//   }\n// }\n  \n// class TodoHeader extends React.Component {\n//   render () {\n//     return <h1>Todo list</h1>;\n//   }\n// }\n  \n// class TodoApp extends React.Component {\n//   constructor (props) {\n//     super(props);\n//     this.addItem = this.addItem.bind(this);\n//     this.removeItem = this.removeItem.bind(this);\n//     this.markTodoDone = this.markTodoDone.bind(this);\n//     this.state = {todoItems: todoItems};\n//   }\n//   addItem(todoItem) {\n//     todoItems.unshift({\n//       index: todoItems.length+1, \n//       value: todoItem.newItemValue, \n//       done: false\n//     });\n//     this.setState({todoItems: todoItems});\n//   }\n//   removeItem (itemIndex) {\n//     todoItems.splice(itemIndex, 1);\n//     this.setState({todoItems: todoItems});\n//   }\n//   markTodoDone(itemIndex) {\n//     var todo = todoItems[itemIndex];\n//     todoItems.splice(itemIndex, 1);\n//     todo.done = !todo.done;\n//     todo.done ? todoItems.push(todo) : todoItems.unshift(todo);\n//     this.setState({todoItems: todoItems});  \n//   }\n//   render() {\n//     return (\n//       <div id=\"main\">\n//         <TodoHeader />\n//         <TodoList items={this.props.initItems} removeItem={this.removeItem} markTodoDone={this.markTodoDone}/>\n//         <TodoForm addItem={this.addItem} />\n//       </div>\n//     );\n//   }\n// }\n\n// ReactDOM.render(<TodoApp initItems={todoItems}/>, document.getElementById('root'));"]},"metadata":{},"sourceType":"module"}