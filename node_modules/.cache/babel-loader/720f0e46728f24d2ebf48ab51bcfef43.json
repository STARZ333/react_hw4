{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\77393\\\\Desktop\\\\quiz5\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport TodoList from './TodoList';\nimport TodoItem from './TodoItem';\nimport TodoAddForm from './TodoAddForm'; //匯入item靜態類型的定義\n\n//匯入樣式\nimport styles from '../style/styles.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // 預先定義state的結構\n  //建構式\n  constructor() {\n    super();\n\n    this.handleItemAdd = aItem => {\n      //加入新的項目到最前面\n      //此處有變動\n      const newItems = [aItem, ...this.state.items]; //按下enter後，加到列表項目中並清空輸入框\n\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.handleStylingItem = index => {\n      //拷貝一個新陣列\n      const newItems = [...this.state.items]; //切換isCompleted的布林值\n\n      newItems[index].isCompleted = !newItems[index].isCompleted; //整個陣列重新更新\n\n      this.setState({\n        items: newItems\n      });\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TodoAddForm, {\n        placeholderText: \"\\u958B\\u59CB\\u8F38\\u5165\\u4E00\\u4E9B\\u6587\\u5B57\\u5427\",\n        onItemAdd: this.handleItemAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n        children: this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n          style: item.isCompleted ? styles.itemCompleted : styles.itemNormal,\n          title: item.title,\n          onItemClick: () => {\n            this.handleStylingItem(index);\n          }\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 輸出App模組\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/77393/Desktop/quiz5/src/App.js"],"names":["React","Component","TodoList","TodoItem","TodoAddForm","styles","App","constructor","handleItemAdd","aItem","newItems","state","items","setState","handleStylingItem","index","isCompleted","render","map","item","itemCompleted","itemNormal","title","id"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CAEA;;AAGA;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1B;AAKA;AACAM,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQdC,aARc,GAQGC,KAAD,IAAiB;AAC/B;AACA;AACA,YAAMC,QAAQ,GAAG,CAACD,KAAD,EAAQ,GAAG,KAAKE,KAAL,CAAWC,KAAtB,CAAjB,CAH+B,CAK/B;;AACA,WAAKC,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEF;AADK,OAAd;AAGD,KAjBa;;AAAA,SAoBdI,iBApBc,GAoBOC,KAAD,IAAmB;AACrC;AACA,YAAML,QAAQ,GAAG,CAAC,GAAG,KAAKC,KAAL,CAAWC,KAAf,CAAjB,CAFqC,CAIrC;;AACAF,MAAAA,QAAQ,CAACK,KAAD,CAAR,CAAgBC,WAAhB,GAA8B,CAACN,QAAQ,CAACK,KAAD,CAAR,CAAgBC,WAA/C,CALqC,CAOrC;;AACA,WAAKH,QAAL,CAAc;AACZD,QAAAA,KAAK,EAAEF;AADK,OAAd;AAGD,KA/Ba;;AAGZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGD;;AA2BDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,eAAe,EAAC,wDAA7B;AAAyC,QAAA,SAAS,EAAE,KAAKT;AAAzD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA,kBAEE,KAAKG,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOJ,KAAP,kBACjB,QAAC,QAAD;AAEE,UAAA,KAAK,EAAEI,IAAI,CAACH,WAAL,GAAkBX,MAAM,CAACe,aAAzB,GAAwCf,MAAM,CAACgB,UAFxD;AAGE,UAAA,KAAK,EAAEF,IAAI,CAACG,KAHd;AAIE,UAAA,WAAW,EAAE,MAAM;AAAE,iBAAKR,iBAAL,CAAuBC,KAAvB;AAA+B;AAJtD,WACOI,IAAI,CAACI,EADZ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA3DyB,C,CA8D5B;;;AACA,eAAejB,GAAf","sourcesContent":["//@flow\r\nimport React, { Component } from 'react'\r\nimport TodoList from './TodoList'\r\nimport TodoItem from './TodoItem'\r\nimport TodoAddForm from './TodoAddForm'\r\n\r\n//匯入item靜態類型的定義\r\nimport type { Item } from '../definitions/TodoTypeDefinition.js'\r\n\r\n//匯入樣式\r\nimport styles from '../style/styles.js'\r\n\r\nclass App extends Component {\r\n  // 預先定義state的結構\r\n  state: {\r\n    items: Array<Item>,\r\n  }\r\n\r\n  //建構式\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      items: [],\r\n    }\r\n  }\r\n\r\n  handleItemAdd = (aItem: Item) => {\r\n    //加入新的項目到最前面\r\n    //此處有變動\r\n    const newItems = [aItem, ...this.state.items ]\r\n\r\n    //按下enter後，加到列表項目中並清空輸入框\r\n    this.setState({\r\n      items: newItems,\r\n    })\r\n  }\r\n\r\n  //處理樣式變化其中一個陣列中成員的方法\r\n  handleStylingItem = (index: number) => {\r\n    //拷貝一個新陣列\r\n    const newItems = [...this.state.items]\r\n\r\n    //切換isCompleted的布林值\r\n    newItems[index].isCompleted = !newItems[index].isCompleted\r\n\r\n    //整個陣列重新更新\r\n    this.setState({\r\n      items: newItems,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <TodoAddForm placeholderText=\"開始輸入一些文字吧\" onItemAdd={this.handleItemAdd} />\r\n        <TodoList>\r\n        {\r\n          this.state.items.map((item, index) => (\r\n              <TodoItem\r\n                key={item.id}\r\n                style={item.isCompleted? styles.itemCompleted: styles.itemNormal}\r\n                title={item.title}\r\n                onItemClick={() => { this.handleStylingItem(index) }}\r\n              />\r\n            )\r\n          )\r\n        }\r\n        </TodoList>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 輸出App模組\r\nexport default App;"]},"metadata":{},"sourceType":"module"}